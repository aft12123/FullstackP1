{"ast":null,"code":"var _jsxFileName = \"/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/Restaurants.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const Restaurants = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:5400/restaurants\")\n//       .then((response) => {\n//         console.log(\"API Response:\", response.data); // Debugging\n//         if (Array.isArray(response.data)) {\n//           setRestaurants(response.data);\n//         } else {\n//           console.error(\"Unexpected API response:\", response.data);\n//           setRestaurants([]); // Fallback to an empty array\n//         }\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//         setError(error.message);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error: {error}</p>;\n\n//   return (\n//     <div>\n//       <h2>Restaurants List</h2>\n//       <ul>\n//         {Array.isArray(restaurants) && restaurants.length > 0 ? (\n//           restaurants.map((restaurant) => (\n//             // <li key={restaurant.id}>\n//             //   <strong>{restaurant.restaurant}</strong> - {restaurant.city}\n//             // </li>\n//             <li key={restaurant.id}>\n//               <strong>\n//                 <a href={`/restaurants/${restaurant.id}`}>{restaurant.restaurant}</a>\n//               </strong> - {restaurant.city}\n//               <p>\n//                 <a href={`/getRestaurantsByCity/${restaurant.city}`}>\n//                   See more restaurants in {restaurant.city}\n//                 </a>\n//               </p>\n\n//             </li>\n\n//           ))\n//         ) : (\n//           <p>No restaurants available.</p>\n//         )}\n//       </ul>\n\n//     </div>\n//   );\n// };\n\n// export default Restaurants;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Restaurants = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:5400/restaurants\").then(response => {\n      console.log(\"API Response:\", response.data); // Debugging\n      if (Array.isArray(response.data)) {\n        setRestaurants(response.data);\n      } else {\n        console.error(\"Unexpected API response:\", response.data);\n        setRestaurants([]); // Fallback to an empty array\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restaurants List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(restaurants) && restaurants.length > 0 ? restaurants.map(restaurant =>\n      /*#__PURE__*/\n      // <li key={restaurant.id}>\n      //   <strong>{restaurant.restaurant}</strong> - {restaurant.city}\n      // </li>\n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/restaurants/${restaurant.id}`,\n            children: restaurant.restaurant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), \" - \", restaurant.city, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/getRestaurantsByCity/${restaurant.city}`,\n            children: [\"See more restaurants in \", restaurant.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Restaurants, \"EyKcgOJ2Jz9RqZ9BgIPBMzZH3/k=\");\n_c = Restaurants;\nexport default Restaurants;\nvar _c;\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Restaurants","_s","restaurants","setRestaurants","loading","setLoading","error","setError","get","then","response","console","log","data","Array","isArray","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","restaurant","href","id","city","_c","$RefreshReg$"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/Restaurants.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const Restaurants = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:5400/restaurants\")\n//       .then((response) => {\n//         console.log(\"API Response:\", response.data); // Debugging\n//         if (Array.isArray(response.data)) {\n//           setRestaurants(response.data);\n//         } else {\n//           console.error(\"Unexpected API response:\", response.data);\n//           setRestaurants([]); // Fallback to an empty array\n//         }\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//         setError(error.message);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error: {error}</p>;\n\n//   return (\n//     <div>\n//       <h2>Restaurants List</h2>\n//       <ul>\n//         {Array.isArray(restaurants) && restaurants.length > 0 ? (\n//           restaurants.map((restaurant) => (\n//             // <li key={restaurant.id}>\n//             //   <strong>{restaurant.restaurant}</strong> - {restaurant.city}\n//             // </li>\n//             <li key={restaurant.id}>\n//               <strong>\n//                 <a href={`/restaurants/${restaurant.id}`}>{restaurant.restaurant}</a>\n//               </strong> - {restaurant.city}\n//               <p>\n//                 <a href={`/getRestaurantsByCity/${restaurant.city}`}>\n//                   See more restaurants in {restaurant.city}\n//                 </a>\n//               </p>\n\n//             </li>\n\n            \n//           ))\n//         ) : (\n//           <p>No restaurants available.</p>\n//         )}\n//       </ul>\n\n      \n//     </div>\n//   );\n// };\n\n// export default Restaurants;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Restaurants = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5400/restaurants\")\n      .then((response) => {\n        console.log(\"API Response:\", response.data); // Debugging\n        if (Array.isArray(response.data)) {\n          setRestaurants(response.data);\n        } else {\n          console.error(\"Unexpected API response:\", response.data);\n          setRestaurants([]); // Fallback to an empty array\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h2>Restaurants List</h2>\n      <ul>\n        {Array.isArray(restaurants) && restaurants.length > 0 ? (\n          restaurants.map((restaurant) => (\n            // <li key={restaurant.id}>\n            //   <strong>{restaurant.restaurant}</strong> - {restaurant.city}\n            // </li>\n            <li key={restaurant.id}>\n              <strong>\n                <a href={`/restaurants/${restaurant.id}`}>{restaurant.restaurant}</a>\n              </strong> - {restaurant.city}\n\n              <p>\n                <a href={`/getRestaurantsByCity/${restaurant.city}`}>\n                  See more restaurants in {restaurant.city}\n                </a>\n              </p>\n\n            </li>\n\n            \n          ))\n        ) : (\n          <p>No restaurants available.</p>\n        )}\n      </ul>\n\n      \n    </div>\n  );\n};\n\nexport default Restaurants;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}