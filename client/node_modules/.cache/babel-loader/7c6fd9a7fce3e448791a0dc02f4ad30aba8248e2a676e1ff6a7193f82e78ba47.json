{"ast":null,"code":"var _jsxFileName = \"/Users/deepaksmac/Desktop/Express.JS/Phase-2/client/src/RestaurantByCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantsByCity = () => {\n  _s();\n  const {\n    city\n  } = useParams();\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch all restaurants first to extract unique cities\n    axios.get(`http://localhost:5400/getRestaurantsByCity/${city}`).then(response => {\n      console.log(\"API Response:\", response.data);\n      if (response.data.restaurantList && Array.isArray(response.data.restaurantList)) {\n        const uniqueCities = [...new Set(response.data.restaurantList.map(r => r.city))];\n        setCities(uniqueCities);\n      }\n    }).catch(error => console.error(\"Error fetching cities:\", error));\n  }, [city]);\n  const handleCityChange = event => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n    axios.get(`http://localhost:5400/getRestaurantsByCity/${city}`).then(response => {\n      if (Array.isArray(response.data.restaurantList)) {\n        setRestaurants(response.data.restaurantList);\n      } else {\n        setRestaurants([]);\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError(\"Failed to fetch restaurants.\");\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Zomato Clone \\uD83C\\uDF7D\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCityChange,\n        value: selectedCity,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading restaurants...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: restaurant.restaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCCD \", restaurant.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No restaurants found for this city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantsByCity, \"DdZNg9/Y1KuhRleilL4F3co8hc0=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantsByCity;\nexport default RestaurantsByCity;\nvar _c;\n$RefreshReg$(_c, \"RestaurantsByCity\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","RestaurantsByCity","_s","city","cities","setCities","selectedCity","setSelectedCity","restaurants","setRestaurants","loading","setLoading","error","setError","get","then","response","console","log","data","restaurantList","Array","isArray","uniqueCities","Set","map","r","catch","handleCityChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","length","restaurant","id","_c","$RefreshReg$"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-2/client/src/RestaurantByCity.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst RestaurantsByCity = () => {\n  const { city } = useParams(); \n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch all restaurants first to extract unique cities\n    axios\n      .get(`http://localhost:5400/getRestaurantsByCity/${city}`)\n      .then((response) => {\n        console.log(\"API Response:\", response.data);\n        if (response.data.restaurantList && Array.isArray(response.data.restaurantList)) {\n          const uniqueCities = [\n            ...new Set(response.data.restaurantList.map((r) => r.city)),\n          ];\n          setCities(uniqueCities);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching cities:\", error));\n  }, [city]);\n\n  const handleCityChange = (event) => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n\n    axios\n      .get(`http://localhost:5400/getRestaurantsByCity/${city}`)\n      .then((response) => {\n        if (Array.isArray(response.data.restaurantList)) {\n          setRestaurants(response.data.restaurantList);\n        } else {\n          setRestaurants([]);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(\"Failed to fetch restaurants.\");\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Zomato Clone üçΩÔ∏è</h1>\n\n      <div className=\"dropdown-container\">\n        <label>Select a City: </label>\n        <select onChange={handleCityChange} value={selectedCity}>\n          <option value=\"\">-- Select --</option>\n          {cities.map((city, index) => (\n            <option key={index} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {loading && <p className=\"loading\">Loading restaurants...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      <div className=\"restaurant-list\">\n        {restaurants.length > 0 ? (\n          restaurants.map((restaurant) => (\n            <div key={restaurant.id} className=\"restaurant-card\">\n              <h2>{restaurant.restaurant}</h2>\n              <p>üìç {restaurant.city}</p>\n            </div>\n          ))\n        ) : (\n          <p className=\"no-data\">No restaurants found for this city.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantsByCity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}