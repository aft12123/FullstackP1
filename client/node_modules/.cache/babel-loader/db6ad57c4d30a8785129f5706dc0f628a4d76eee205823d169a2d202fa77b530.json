{"ast":null,"code":"var _jsxFileName = \"/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/result.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const city = queryParams.get(\"city\");\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5400/getRestaurantsByCity/${city}`);\n        console.log(\"response-->>>\", response);\n        setRestaurants(response.data.restarantList);\n      } catch (err) {\n        setError(\"Failed to fetch restaurants.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (city) {\n      fetchRestaurants();\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Restaurants in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading restaurants...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: restaurant.restaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: restaurant.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No restaurants found in \", city, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"19yk8iY7h/2gGZGXswuyLIc05c4=\", false, function () {\n  return [useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["useLocation","useNavigate","useState","useEffect","axios","jsxDEV","_jsxDEV","Results","_s","location","queryParams","URLSearchParams","search","city","get","restaurants","setRestaurants","loading","setLoading","error","setError","fetchRestaurants","response","console","log","data","restarantList","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","restaurant","id","_c","$RefreshReg$"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/result.jsx"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Results() {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const city = queryParams.get(\"city\");\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5400/getRestaurantsByCity/${city}`);\n        console.log(\"response-->>>\",response);\n        setRestaurants(response.data.restarantList);\n      } catch (err) {\n        setError(\"Failed to fetch restaurants.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (city) {\n      fetchRestaurants();\n    }\n  }, [city]);\n\n  return (\n    <div>\n      <h1>Restaurants in {city}</h1>\n\n      {loading && <p className=\"loading\">Loading restaurants...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      <div className=\"restaurant-list\">\n        {restaurants.length > 0 ? (\n          restaurants.map((restaurant) => (\n            <div key={restaurant.id} className=\"restaurant-card\">\n              <h2>{restaurant.restaurant}</h2>\n              <p>{restaurant.city}</p>\n            </div>\n          ))\n        ) : (\n          <p>No restaurants found in {city}.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}