{"ast":null,"code":"var _jsxFileName = \"/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/RestaurantByCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantsByCity = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch all restaurants to extract unique cities\n    axios.get(\"http://localhost:5400/restaurants\").then(response => {\n      if (response.data && Array.isArray(response.data)) {\n        const uniqueCities = [...new Set(response.data.map(r => r.city))];\n        setCities(uniqueCities);\n      }\n    }).catch(error => console.error(\"Error fetching cities:\", error));\n  }, []);\n  const handleCityChange = event => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n    axios.get(`http://localhost:5400/getRestaurantsByCity/${city}`).then(response => {\n      if (response.data.restaurantList && Array.isArray(response.data.restaurantList)) {\n        setRestaurants(response.data.restaurantList);\n        navigate(`/restaurants/${city}`);\n      } else {\n        setRestaurants([]);\n      }\n    }).catch(error => {\n      setError(\"Failed to fetch restaurants.\");\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCityChange,\n        value: selectedCity,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \"Loading & Error Messages\", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading restaurants...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantsByCity, \"bqeGAr6EWjo0Mw2D2UvWp7bcoFk=\", true);\n_c = RestaurantsByCity;\nexport default RestaurantsByCity;\nvar _c;\n$RefreshReg$(_c, \"RestaurantsByCity\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","RestaurantsByCity","_s","cities","setCities","selectedCity","setSelectedCity","restaurants","setRestaurants","loading","setLoading","error","setError","navigate","useNavigate","get","then","response","data","Array","isArray","uniqueCities","Set","map","r","city","catch","console","handleCityChange","event","target","value","restaurantList","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","className","_c","$RefreshReg$"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/RestaurantByCity.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Styles/App.css\";\n\n\nconst RestaurantsByCity = () => {\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate=useNavigate();\n\n  useEffect(() => {\n    // Fetch all restaurants to extract unique cities\n    axios\n      .get(\"http://localhost:5400/restaurants\")\n      .then((response) => {\n        if (response.data && Array.isArray(response.data)) {\n          const uniqueCities = [\n            ...new Set(response.data.map((r) => r.city)),\n          ];\n          setCities(uniqueCities);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching cities:\", error));\n  }, []);\n\n  const handleCityChange = (event) => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n\n    axios\n      .get(`http://localhost:5400/getRestaurantsByCity/${city}`)\n      .then((response) => {\n        if (response.data.restaurantList && Array.isArray(response.data.restaurantList)) {\n          setRestaurants(response.data.restaurantList);\n          navigate(`/restaurants/${city}`);\n        } else {\n          setRestaurants([]);\n        }\n      })\n      .catch((error) => {\n        setError(\"Failed to fetch restaurants.\");\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div >\n\n      {/* Dropdown to select a city */}\n      <div>\n        <label>Select a City: </label>\n        <select onChange={handleCityChange} value={selectedCity}>\n          <option value=\"\">-- Select --</option>\n          {cities.map((city, index) => (\n            <option key={index} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      Loading & Error Messages\n      {loading && <p className=\"loading\">Loading restaurants...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n    </div>\n  );\n};\n\nexport default RestaurantsByCity;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}