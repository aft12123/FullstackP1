{"ast":null,"code":"var _jsxFileName = \"/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/result.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const {\n    city,\n    category\n  } = useParams(); // Get city and category from URL params\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch restaurants based on city or category\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        let url = \"\";\n        if (city) {\n          // Fetch restaurants by city\n          url = `http://localhost:5400/getRestaurantsByCity/${city}`;\n        } else if (category) {\n          // Fetch restaurants by category\n          url = `http://localhost:5400/getRestaurantsByCategory/${category}`;\n        }\n        if (url) {\n          const response = await axios.get(url);\n          console.log(\"Response data:\", response.data);\n          setRestaurants(response.data.restaurantList || []); // Assuming the list is under restaurantList\n        }\n      } catch (err) {\n        setError(\"Failed to fetch restaurants.\");\n      }\n    };\n    if (city || category) {\n      fetchRestaurants();\n    }\n  }, [city, category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Restaurants in \", city ? city : category ? category : \"Our Collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/restaurant/${restaurant.id}`,\n          className: \"restaurant-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: restaurant.image || \"/default-restaurant.jpg\" // Default image if not provided\n            ,\n            alt: restaurant.restaurant,\n            className: \"restaurant-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: restaurant.restaurant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCCD \", restaurant.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"hk3tcYyx4H0TjVpFDad1V4INw/A=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["useLocation","useNavigate","useParams","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Results","_s","location","queryParams","URLSearchParams","search","city","category","restaurants","setRestaurants","error","setError","fetchRestaurants","url","response","get","console","log","data","restaurantList","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","restaurant","to","id","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/pages/result.jsx"],"sourcesContent":["import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction Results() {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const { city, category } = useParams(); // Get city and category from URL params\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch restaurants based on city or category\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        let url = \"\";\n\n        if (city) {\n          // Fetch restaurants by city\n          url = `http://localhost:5400/getRestaurantsByCity/${city}`;\n        } else if (category) {\n          // Fetch restaurants by category\n          url = `http://localhost:5400/getRestaurantsByCategory/${category}`;\n        }\n\n        if (url) {\n          const response = await axios.get(url);\n          console.log(\"Response data:\", response.data);\n          setRestaurants(response.data.restaurantList || []); // Assuming the list is under restaurantList\n        }\n      } catch (err) {\n        setError(\"Failed to fetch restaurants.\");\n      }\n    };\n\n    if (city || category) {\n      fetchRestaurants();\n    }\n  }, [city, category]);\n\n  return (\n    <div>\n      <h1>\n        Restaurants in {city ? city : category ? category : \"Our Collection\"}\n      </h1>\n\n      {error && <p className=\"error\">{error}</p>}\n\n      <div className=\"restaurant-list\">\n        {restaurants.length > 0 ? (\n          restaurants.map((restaurant) => (\n            <div key={restaurant.id} className=\"restaurant-card\">\n              <Link to={`/restaurant/${restaurant.id}`} className=\"restaurant-link\">\n                <img\n                  src={restaurant.image || \"/default-restaurant.jpg\"} // Default image if not provided\n                  alt={restaurant.restaurant}\n                  className=\"restaurant-image\"\n                />\n                <div className=\"restaurant-details\">\n                  <h2>{restaurant.restaurant}</h2>\n                  <p>üìç {restaurant.city}</p>\n                </div>\n              </Link>\n            </div>\n          ))\n        ) : (\n          <p>No restaurants found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}