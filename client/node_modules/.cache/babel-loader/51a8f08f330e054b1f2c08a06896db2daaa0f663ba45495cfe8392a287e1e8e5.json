{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5400\"; // Update with your backend URL\n\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed.\";\n  }\n};\nexport const signupUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Signup failed.\";\n  }\n};","map":{"version":3,"names":["axios","API_URL","loginUser","email","password","response","post","data","error","_error$response","_error$response$data","message","signupUser","name","_error$response2","_error$response2$data"],"sources":["/Users/deepaksmac/Desktop/Express.JS/Phase-5/client/src/Utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5400\"; // Update with your backend URL\n\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, { email, password });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.message || \"Login failed.\";\n  }\n};\n\nexport const signupUser = async (name, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, { name, email, password });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.message || \"Signup failed.\";\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,eAAe;EACxD;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEV,KAAK,EAAEC,QAAQ,KAAK;EACzD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAE;MAAEY,IAAI;MAAEV,KAAK;MAAEC;IAAS,CAAC,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA,EAAAC,qBAAA;IACd,MAAM,EAAAD,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,gBAAgB;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}